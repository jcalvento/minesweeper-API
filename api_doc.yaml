swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Minesweeper"
  contact:
    email: "juliancalvento@gmail.com"
host: "localhost:3000"
basePath: "/"
tags:
  - name: "Games"
    description: "Access games resources"
schemes:
  - "https"
  - "http"
paths:
  /games:
    post:
      tags:
        - "games"
      summary: "Creates a new game"
      description: ""
      operationId: "addGame"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Game object that needs to be created"
          required: true
          schema:
            $ref: "#/definitions/Game"
      responses:
        "400":
          description: "When there is an invalid param"
        "404":
          description: "When the game was not found"
    get:
      tags:
        - "games"
      summary: "Fetches existing games"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/IndexResponse"
  /games/{id}:
    get:
      tags:
        - "games"
      summary: "Update an existing pet"
      description: ""
      operationId: "updatePet"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of game to return"
          required: true
          type: "integer"
      responses:
        "404":
          description: "Game not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Game"
    put:
      tags:
        - "games"
      summary: "Updates the given game"
      description: ""
      operationId: "updateGame"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of game to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Game object that needs to be created"
          required: true
          schema:
            $ref: "#/definitions/Game"
      responses:
        "400":
          description: "When there is an invalid param"
        "404":
          description: "When the game was not found"
definitions:
  NewGame:
    type: "object"
    required:
      - "height"
      - "width"
      - "mines"
    properties:
      height:
        type: "integer"
        description: "Number of rows"
      width:
        type: "integer"
        description: "Number of columns"
      mines:
        type: "integer"
        description: "Number of mines"
  CellColumn:
    type: "object"
    additionalProperties:
      type: object
      properties:
        mine:
          type: boolean
          description: "True if the cell is mined"
        flag:
          type: string
          description: "Red flag or question mark flag"
          enum: ["red_flag", "question_mark_flag"]
        covered:
          type: boolean
          description: "True if the cell is covered"
        adjacent_mines_count:
          type: integer
          description: "Number of adjacent mines"
  Cell:
    additionalProperties:
      $ref: "#/definitions/CellColumn"
  IndexResponse:
    type: "array"
    items:
      properties:
        id:
          type: "integer"
          description: "Game id"
  Game:
    type: "object"
    properties:
      height:
        type: "integer"
        description: "Number of rows"
      width:
        type: "integer"
        description: "Number of columns"
      mines_flagged:
        type: "integer"
        description: "Number of red flagged mines"
      uncovered_cells:
        type: "integer"
        description: "Number of uncovered cells"
      ended:
        type: "boolean"
        description: "True if the game is already ended"
      result:
        type: "string"
        description: "Ending result"
      cells:
        $ref: "#/definitions/Cell"
    example:
      {
        "height": 3,
        "width": 3,
        "mines_flagged": 1,
        "uncovered_cells": 2,
        "ended": true,
        "result": "string",
        "cells": {
          "0": {
            "0": {
              "mine": true,
              "flag": "red_flag",
              "covered": true,
              "adjacent_mines_count": 0
            },
            "1": {
              "mine": false,
              "flag":,
              "covered": false,
              "adjacent_mines_count": 2
            },
            "2": {
              "mine": true,
              "flag": "question_mark_flag",
              "covered": true,
              "adjacent_mines_count": 0
            }
          },
          "1": {
            "0": {
              "mine": false,
              "flag":,
              "covered": false,
              "adjacent_mines_count": 1
            },
            "1": {
              "mine": false,
              "flag":,
              "covered": true,
              "adjacent_mines_count": 2
            },
            "2": {
              "mine": false,
              "flag":,
              "covered": true,
              "adjacent_mines_count": 1
            }
          },
          "2": {
            "0": {
              "mine": false,
              "flag":,
              "covered": true,
              "adjacent_mines_count": 0
            },
            "1": {
              "mine": false,
              "flag":,
              "covered": true,
              "adjacent_mines_count": 0
            },
            "2": {
              "mine": false,
              "flag": "question_mark_flag",
              "covered": true,
              "adjacent_mines_count": 0
            }
          }
        }
      }